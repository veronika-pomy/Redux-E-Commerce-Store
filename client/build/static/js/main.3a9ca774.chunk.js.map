{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","pages/Test.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","InitalState","products","cart","cartOpen","categories","currentCategory","store","createStore","state","arguments","length","undefined","action","type","_objectSpread","_toConsumableArray","concat","product","map","_id","purchaseQuantity","newState","filter","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","dispatch","useDispatch","useSelector","image","price","quantity","_jsxs","className","children","Link","to","_jsx","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","_useQuery","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","_ref","placeholder","value","onChange","target","role","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","_slicedToArray","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","indexedProducts","_Fragment","description","disabled","p","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Test","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Provider","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3a9ca774.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// adding initial state to reducer instead of having it in global state\nconst InitalState = {\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  };\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport default function reducer (state = InitalState, action) {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};","import { createStore } from 'redux';\nimport reducers from '../utils/reducers'\n\nconst store = createStore(reducers);\nexport default store;","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  // access state and dispatch actions using redux\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect, useState } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  // access state and dispatch actions using redux\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  // access state and dispatch actions using redux\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  \n// dispatch actions using redux\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  // access state and dispatch actions using redux\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Cart from '../components/Cart';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\n\nfunction Test() {\n    return (\n      <div>\n\n          <h1>THIS IS A TEST</h1>\n\n      </div>\n    );\n  }\n  \n  export default Test;\n  ","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Test from './pages/Test';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/test\" \n                element={<Test />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}